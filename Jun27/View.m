//
//  View.m
//  Jun27
//
//  Created by Udo Hoppenworth on 6/27/13.
//  Copyright (c) 2013 Udo Hoppenworth. All rights reserved.
//

#import <CoreLocation/CLLocation.h>
#import "View.h"

@implementation View

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame: frame];
    if (self) {
        // Initialization code
        self.backgroundColor = [UIColor colorWithRed:0.6 green:0.8 blue:1.0 alpha:1.0];
        
    }
    drawCode = FLAG;
    
    return self;
}


// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // toggle which draw code to call
    if (drawCode == FLAG) {
        drawCode = MAP;
    } else {
        drawCode = FLAG;
    }
    
    if (drawCode == MAP) {
        
        self.backgroundColor = [UIColor whiteColor];
        
        // Drawing code for MAP
        static CLLocationCoordinate2D a[] = {
            {17.953259680460388, -67.19306945800781},
            {17.964363928277226, -67.18208312988281},
            {17.963057582388025, -67.16285705566406},
            {17.954566098758452, -67.15805053710938},
            {17.953259680460388, -67.13951110839844},
            {17.947380678685217, -67.12234497070312},
            {17.951300034916105, -67.0989990234375},
            {17.958485295734974, -67.08595275878906},
            {17.972201800792046, -67.071533203125},
            {17.974161214584193, -67.04887390136719},
            {17.970242365263235, -67.0220947265625},
            {17.97089551285456, -67.00355529785156},
            {17.97089551285456, -66.98776245117188},
            {17.95783210227242, -66.98226928710938},
            {17.948033910754884, -66.96647644042969},
            {17.94280798665738, -66.9232177734375},
            {17.953259680460388, -66.89094543457031},
            {17.95260646769184, -66.851806640625},
            {17.961751226842342, -66.81610107421875},
            {17.972201800792046, -66.78932189941406},
            {17.984611054282706, -66.78314208984375},
            {17.98526414872574, -66.7913818359375},
            {17.97938621174613, -66.79344177246094},
            {17.975467478368685, -66.80442810058594},
            {17.983957957423037, -66.80580139160156},
            {17.982651756454118, -66.79550170898438},
            {17.994407217139745, -66.79824829101562},
            {17.995060275324253, -66.78932189941406},
            {18.007467921352998, -66.76734924316406},
            {17.99963161491187, -66.76254272460938},
            {17.99897857365388, -66.75430297851562},
            {17.993754156537484, -66.76048278808594},
            {17.98787650233009, -66.7529296875},
            {17.993754156537484, -66.72340393066406},
            {17.97807997695026, -66.70761108398438},
            {17.974161214584193, -66.69113159179688},
            {17.972854941138053, -66.67739868164062},
            {17.96828290799978, -66.67190551757812},
            {17.975467478368685, -66.65885925292969},
            {17.981345545819597, -66.64306640625},
            {17.983957957423037, -66.6265869140625},
            {17.976773732490905, -66.61834716796875},
            {17.966323429003765, -66.61834716796875},
            {17.964363928277226, -66.61079406738281},
            {17.969589215256942, -66.60598754882812},
            {17.971548658030866, -66.59294128417969},
            {17.966323429003765, -66.58744812011719},
            {17.962404405822205, -66.5826416015625},
            {17.966323429003765, -66.57028198242188},
            {17.969589215256942, -66.5606689453125},
            {17.974161214584193, -66.54075622558594},
            {17.98526414872574, -66.51397705078125},
            {17.989835742155027, -66.49063110351562},
            {17.988529584688845, -66.47689819335938},
            {17.991794960224833, -66.46522521972656},
            {17.98787650233009, -66.45423889160156},
            {17.97938621174613, -66.44737243652344},
            {17.961751226842342, -66.4288330078125},
            {17.959791675419222, -66.41304016113281},
            {17.938888442287904, -66.38626098632812},
            {17.955219304287816, -66.36634826660156},
            {17.972854941138053, -66.346435546875},
            {17.977426855928485, -66.32240295410156},
            {17.97089551285456, -66.31141662597656},
            {17.959791675419222, -66.29768371582031},
            {17.947380678685217, -66.27845764160156},
            {17.938888442287904, -66.25991821289062},
            {17.92974250120397, -66.24824523925781},
            {17.935622089001583, -66.23176574707031},
            {17.95260646769184, -66.22077941894531},
            {17.951300034916105, -66.19056701660156},
            {17.947380678685217, -66.18644714355469},
            {17.92516935349583, -66.16722106933594},
            {17.93758190820677, -66.14044189453125},
            {17.949340367657033, -66.12396240234375},
            {17.949340367657033, -66.11503601074219},
            {17.95391289081595, -66.10130310058594},
            {17.964363928277226, -66.08551025390625},
            {17.961751226842342, -66.07109069824219},
            {17.95783210227242, -66.05186462402344},
            {17.951953252510396, -66.04637145996094},
            {17.961751226842342, -66.04019165039062},
            {17.96828290799978, -66.03195190429688},
            {17.97873309555617, -66.01753234863281},
            {17.976773732490905, -66.00173950195312},
            {17.973508079068797, -65.99006652832031},
            {17.97089551285456, -65.98182678222656},
            {17.9669765910837, -65.97770690917969},
            {17.974161214584193, -65.97015380859375},
            {17.972201800792046, -65.95848083496094},
            {17.97089551285456, -65.94818115234375},
            {17.97807997695026, -65.928955078125},
            {17.974814347684184, -65.91934204101562},
            {17.97873309555617, -65.90629577636719},
            {17.988529584688845, -65.89874267578125},
            {17.991794960224833, -65.88912963867188},
            {17.9904888172623, -65.88569641113281},
            {17.994407217139745, -65.8795166015625},
            {18.008120931166218, -65.86921691894531},
            {18.00550887739794, -65.86029052734375},
            {18.010732946224717, -65.84930419921875},
            {18.01726281448386, -65.84037780761719},
            {18.01465089622104, -65.83488464355469},
            {18.021833578254643, -65.830078125},
            {18.034239339010618, -65.82870483398438},
            {18.042726987280457, -65.83076477050781},
            {18.05513127492153, -65.82939147949219},
            {18.059048236550343, -65.8026123046875},
            {18.072756914578996, -65.79643249511719},
            {18.08515908203517, -65.79574584960938},
            {18.089728080676412, -65.78887939453125},
            {18.103434362419993, -65.78681945800781},
            {18.11387652438154, -65.77926635742188},
            {18.11844477451179, -65.77857971191406},
            {18.149766706448922, -65.76553344726562},
            {18.1608585453363, -65.7476806640625},
            {18.164773143863748, -65.74150085449219},
            {18.177821171774454, -65.73532104492188},
            {18.185649520265386, -65.72776794433594},
            {18.187606552494625, -65.71678161621094},
            {18.18630186678183, -65.70648193359375},
            {18.179778291829212, -65.69206237792969},
            {18.19282519773319, -65.69000244140625},
            {18.200652872686923, -65.67901611328125},
            {18.208480196039883, -65.66390991210938},
            {18.202609736492814, -65.65086364746094},
            {18.202609736492814, -65.64193725585938},
            {18.203262019544418, -65.62957763671875},
            {18.215002696822772, -65.63163757324219},
            {18.230655701679375, -65.62408447265625},
            {18.223481582551347, -65.61515808105469},
            {18.21369821621042, -65.60966491699219},
            {18.222177165476367, -65.60211181640625},
            {18.23522089617796, -65.60142517089844},
            {18.250219977065594, -65.60760498046875},
            {18.253480475537533, -65.6158447265625},
            {18.26521776327963, -65.62751770019531},
            {18.278258263415946, -65.62751770019531},
            {18.282170222334766, -65.63507080078125},
            {18.295209448024046, -65.63507080078125},
            {18.3017286930179, -65.62614440917969},
            {18.31150710048376, -65.62614440917969},
            {18.327151403632502, -65.6268310546875},
            {18.33692837470707, -65.63095092773438},
            {18.346704792867193, -65.63713073730469},
            {18.357132362517966, -65.62751770019531},
            {18.363649273805038, -65.62408447265625},
            {18.376682358161855, -65.61653137207031},
            {18.38775970559777, -65.61653137207031},
            {18.384501736115247, -65.62477111816406},
            {18.376030727327784, -65.62751770019531},
            {18.371469242560305, -65.63438415527344},
            {18.370817592033145, -65.63850402832031},
            {18.381243705060864, -65.643310546875},
            {18.368862625684155, -65.65155029296875},
            {18.364300951402384, -65.66047668457031},
            {18.362345911229017, -65.66871643066406},
            {18.363649273805038, -65.67489624023438},
            {18.369514283594988, -65.67901611328125},
            {18.367559302479318, -65.68794250488281},
            {18.369514283594988, -65.69686889648438},
            {18.372772536230446, -65.70510864257812},
            {18.376030727327784, -65.71197509765625},
            {18.38254692487064, -65.71884155273438},
            {18.38775970559777, -65.72296142578125},
            {18.380592091462194, -65.7366943359375},
            {18.383198531081593, -65.74630737304688},
            {18.391669187688766, -65.75454711914062},
            {18.39883634115472, -65.76072692871094},
            {18.399487885775084, -65.76896667480469},
            {18.405351676442407, -65.77239990234375},
            {18.40991226446453, -65.77033996582031},
            {18.41382124374698, -65.775146484375},
            {18.40991226446453, -65.78132629394531},
            {18.40665471391906, -65.78681945800781},
            {18.4073062289593, -65.79849243164062},
            {18.40991226446453, -65.81016540527344},
            {18.41642718061134, -65.81977844238281},
            {18.42294185010359, -65.82733154296875},
            {18.43466763338112, -65.83763122558594},
            {18.43401622195624, -65.84793090820312},
            {18.435970448824882, -65.86097717285156},
            {18.437924653474408, -65.87471008300781},
            {18.44704398132657, -65.89187622070312},
            {18.451603463715788, -65.90423583984375},
            {18.446392616818677, -65.90972900390625},
            {18.443787134087984, -65.92552185058594},
            {18.44704398132657, -65.93994140625},
            {18.452906150735696, -65.96260070800781},
            {18.458768120015137, -65.98457336425781},
            {18.458768120015137, -65.99418640136719},
            {18.450952116499924, -65.99418640136719},
            {18.445741249840804, -66.00791931152344},
            {18.443787134087984, -66.02096557617188},
            {18.45486016273484, -66.0552978515625},
            {18.45941943757901, -66.07795715332031},
            {18.460070752671413, -66.09237670898438},
            {18.46072206529225, -66.10610961914062},
            {18.449649414656722, -66.08688354492188},
            {18.443135757230912, -66.08070373535156},
            {18.438576050086308, -66.09031677246094},
            {18.432713391700855, -66.09786987304688},
            {18.427501971948608, -66.10954284667969},
            {18.443787134087984, -66.13151550292969},
            {18.454208827872655, -66.13838195800781},
            {18.467235055548393, -66.13838195800781},
            {18.458116799979834, -66.14593505859375},
            {18.45486016273484, -66.15623474121094},
            {18.452906150735696, -66.16722106933594},
            {18.457465477473214, -66.1761474609375},
            {18.468537623933432, -66.19880676269531},
            {18.467235055548393, -66.21391296386719},
            {18.471142731032526, -66.24275207519531},
            {18.480260294271247, -66.26884460449219},
            {18.475050317494727, -66.27983093261719},
            {18.470491457966812, -66.28807067871094},
            {18.478306571532077, -66.2969970703125},
            {18.476352826530032, -66.30592346191406},
            {18.480911530236654, -66.324462890625},
            {18.484167672952875, -66.33613586425781},
            {18.485470112719618, -66.34849548339844},
            {18.486772542588447, -66.36154174804688},
            {18.490028573953296, -66.37527465820312},
            {18.48481889407345, -66.37870788574219},
            {18.493935729915346, -66.39724731445312},
            {18.490679772801567, -66.40274047851562},
            {18.48612132889131, -66.4398193359375},
            {18.47895781491889, -66.44325256347656},
            {18.469840182428346, -66.45698547363281},
            {18.46918890441719, -66.47758483886719},
            {18.47570157324906, -66.49612426757812},
            {18.480260294271247, -66.5167236328125},
            {18.48351644935798, -66.52839660644531},
            {18.485470112719618, -66.54762268066406},
            {18.48937737263002, -66.55929565429688},
            {18.48481889407345, -66.5771484375},
            {18.48807496255878, -66.59568786621094},
            {18.491982163072823, -66.61354064941406},
            {18.49133096917478, -66.64581298828125},
            {18.486772542588447, -66.66366577148438},
            {18.490679772801567, -66.67259216308594},
            {18.48351644935798, -66.6815185546875},
            {18.484167672952875, -66.69044494628906},
            {18.4815627637281, -66.70143127441406},
            {18.47374779856632, -66.70280456542969},
            {18.478306571532077, -66.75155639648438},
            {18.487423753810972, -66.77284240722656},
            {18.49133096917478, -66.78863525390625},
            {18.490679772801567, -66.81060791015625},
            {18.48807496255878, -66.829833984375},
            {18.48937737263002, -66.86553955078125},
            {18.487423753810972, -66.88270568847656},
            {18.48351644935798, -66.89849853515625},
            {18.485470112719618, -66.92253112792969},
            {18.490679772801567, -66.93695068359375},
            {18.48937737263002, -66.95205688476562},
            {18.490028573953296, -66.9671630859375},
            {18.490679772801567, -66.98020935058594},
            {18.501098617713232, -66.99806213378906},
            {18.509563462441502, -67.01248168945312},
            {18.51347017266187, -67.01934814453125},
            {18.507610073887587, -67.02552795410156},
            {18.511516828700273, -67.03720092773438},
            {18.514121282360463, -67.05368041992188},
            {18.512167945831695, -67.07359313964844},
            {18.516074596589366, -67.08938598632812},
            {18.512167945831695, -67.10586547851562},
            {18.48937737263002, -67.16079711914062},
            {18.477655325671623, -67.16903686523438},
            {18.461373375441447, -67.1649169921875},
            {18.446392616818677, -67.159423828125},
            {18.430759127804837, -67.15530395507812},
            {18.41577570009489, -67.16148376464844},
            {18.407957741534034, -67.17247009277344},
            {18.399487885775084, -67.18963623046875},
            {18.393623895475336, -67.19444274902344},
            {18.392320759414744, -67.1978759765625},
            {18.381243705060864, -67.2198486328125},
            {18.376030727327784, -67.23701477050781},
            {18.371469242560305, -67.25761413574219},
            {18.366907637185477, -67.26722717285156},
            {18.359087461734603, -67.26997375488281},
            {18.34409780210156, -67.25967407226562},
            {18.340187242207897, -67.25486755371094},
            {18.318677581650746, -67.24662780761719},
            {18.30303251257898, -67.23495483398438},
            {18.296513316645946, -67.23014831542969},
            {18.294557510034192, -67.21023559570312},
            {18.286082093014507, -67.19375610351562},
            {18.272390159624983, -67.18894958496094},
            {18.253480475537533, -67.17658996582031},
            {18.22674258246203, -67.16835021972656},
            {18.216307167661796, -67.15873718261719},
            {18.201305163063992, -67.1539306640625},
            {18.189563562762388, -67.16285705566406},
            {18.18108302633621, -67.17178344726562},
            {18.16542556842076, -67.18345642089844},
            {18.156291402835436, -67.17796325683594},
            {18.145851771694467, -67.17796325683594},
            {18.136716583015694, -67.18345642089844},
            {18.125623212494194, -67.18208312988281},
            {18.114529138838503, -67.18070983886719},
            {18.103434362419993, -67.18414306640625},
            {18.095602332621386, -67.19444274902344},
            {18.089075373870692, -67.19993591308594},
            {18.075367970024658, -67.19924926757812},
            {18.077326236123927, -67.18894958496094},
            {18.070145820303544, -67.18551635742188},
            {18.06361791476625, -67.19032287597656},
            {18.06361791476625, -67.19512939453125},
            {18.05578410792214, -67.19993591308594},
            {18.047949951893266, -67.19993591308594},
            {18.03293351062904, -67.21160888671875},
            {18.031627672558482, -67.19375610351562},
            {18.031627672558482, -67.19375610351562},
            {18.030321824799564, -67.18242645263672},
            {18.023792440700767, -67.17384338378906},
            {18.01530387941711, -67.17212677001953},
            {18.009100441349712, -67.18070983886719},
            {18.00354981167137, -67.19341278076172},
            {17.99897857365388, -67.2037124633789},
            {17.985917240752073, -67.21366882324219},
            {17.977100294511665, -67.21229553222656},
            {17.969262639348205, -67.21263885498047},
            {17.957178906396358, -67.21538543701172},
            {17.95358628593979, -67.20474243164062}
        };
        static const size_t n = sizeof a / sizeof a[0];
        
        CGPoint b[n];  // x & y coordinate array with transformation
        CGFloat scale = 175;  //pixels per degree of latitude
        
        //Longitude and latitude in degrees of the center of Puerto Rico,
        CGPoint imageCenter = CGPointMake(-66.44256591796875, 18.237177371422433);
        
        for (int i = 0; i < n ; i++) {
            b[i].y = scale * (a[i].latitude - imageCenter.y);
            b[i].x = scale * (a[i].longitude - imageCenter.x) * cos((a[i].latitude) * M_PI / 180);
        }
        
        CGContextRef c = UIGraphicsGetCurrentContext();
        
        CGSize s = self.bounds.size;
        CGContextTranslateCTM(c, s.width / 2, s.height / 2);    // origin in center of view
        CGContextScaleCTM(c, 1, -1);                            // invert y axis
        
        
        // create path
        CGMutablePathRef p = CGPathCreateMutable();
        CGPathMoveToPoint(p, NULL, b[0].x, b[0].y);
        
        for (size_t i = 1; i < n; ++i) {
            CGPathAddLineToPoint(p, NULL, b[i].x, b[i].y);
        }
        
        CGPathCloseSubpath(p);
        
        
        // fill the path
        CGContextBeginPath(c);
        CGContextAddPath(c, p);
        CGContextSetRGBFillColor(c, 0.8, 0.5, 0.1, 1.0);
        
        // draw a shadow
        CGSize shadow = CGSizeMake(5.0, 5.0);
        CGContextSaveGState(c);
        CGContextSetShadow(c, shadow, 10);
        
        CGContextFillPath(c);
        CGContextRestoreGState(c);
        
        // now stroke the same path
        CGContextBeginPath(c);
        CGContextAddPath(c, p);
        CGContextSetRGBStrokeColor(c, 0.0, 0.0, 0.0, 0.8);
        CGContextSetLineWidth(c, 1.5);
        CGContextStrokePath(c);
        
        // draw the title
        CGContextScaleCTM(c, 1, -1);
        UIFont *font = [UIFont boldSystemFontOfSize: 32.0];
        NSString *string = @"Puerto Rico";
        CGSize fontSize = [string sizeWithFont:font];
        CGPoint point = CGPointMake(-fontSize.width/2, -s.height/3);
        CGContextSetRGBFillColor(c, 0.0, 0.0, 0.0, 1.0);
        CGContextSaveGState(c);
        CGContextSetShadow(c, shadow, 10);
        [string drawAtPoint: point withFont: font];
        CGContextRestoreGState(c);
        
        
        //draw the image
        UIImage *image = [UIImage imageNamed: @"beach.jpg"];	//140 by 88
        if (image == nil) {
            NSLog(@"could not find the image");
            return;
        }
        
        //upper left corner of image
        CGPoint imagePoint = CGPointMake(-image.size.width/2 + 20, 5*image.size.height/6 + 20);
        
        CGContextSaveGState(c);
        CGContextSetShadow(c, shadow, 10);
        [image drawAtPoint: imagePoint];
        CGContextRestoreGState(c);
        
        
    } else if (drawCode == FLAG) {
        
        self.backgroundColor = [UIColor colorWithRed:0.6 green:0.8 blue:1.0 alpha:1.0];
        
        // Drawing code for FLAG
        CGFloat w = self.bounds.size.width;
        CGFloat h = self.bounds.size.height;
        CGContextRef c = UIGraphicsGetCurrentContext();
        
        //three red stripes
        CGContextBeginPath(c);
        CGContextAddRect(c, CGRectMake( 0 * w / 5, 0, w / 5, h));
        CGContextAddRect(c, CGRectMake( 2 * w / 5, 0, w / 5, h));
        CGContextAddRect(c, CGRectMake( 4 * w / 5, 0, w / 5, h));
        
        CGContextSetRGBFillColor(c, 1.0, 0.0, 0.0, 1.0);
        CGContextFillPath(c);
        
        //blue triangle
        CGContextBeginPath(c);
        CGContextMoveToPoint(c, 0.0, 0.0);
        CGContextAddLineToPoint(c, w/2, h/2);
        CGContextAddLineToPoint(c, w, 0.0);
        CGContextClosePath(c);
        CGContextSetRGBFillColor(c, 0.0, 0.0, 1.0, 1.0);
        CGContextFillPath(c);
        
        //White star 
        CGPoint center = CGPointMake(w/2, h / 6); //of blue triangle
        CGFloat radius = h / 10;	
        CGContextBeginPath(c);
        
        CGFloat theta = 0;		
        CGContextMoveToPoint(c,
                             center.x + radius * cosf(theta),
                             center.y - radius * sinf(theta)
                             );
        
        theta += 2 * M_PI * 2 / 5;		
        CGContextAddLineToPoint(c,
                                center.x + radius * cosf(theta),
                                center.y - radius * sinf(theta)
                                );
        
        theta += 2 * M_PI * 2 / 5;		
        CGContextAddLineToPoint(c,
                                center.x + radius * cosf(theta),
                                center.y - radius * sinf(theta)
                                );
        
        theta += 2 * M_PI * 2 / 5;		
        CGContextAddLineToPoint(c,
                                center.x + radius * cosf(theta),
                                center.y - radius * sinf(theta)
                                );
        
        theta += 2 * M_PI * 2 / 5;
        CGContextAddLineToPoint(c,
                                center.x + radius * cosf(theta),
                                center.y - radius * sinf(theta)
                                );
        
        
        CGContextClosePath(c);
        CGContextSetRGBFillColor(c, 1.0, 1.0, 1.0, 1.0);
        CGContextFillPath(c);
    }
    
    [self performSelector: @selector(setNeedsDisplay) withObject: nil afterDelay: 2.0];
    
} 


@end
